name: CD-EM-RCC-InfraWorkflow-Generator 

permissions:
  id-token: write
  contents: write

on:
  push:
    branches: [main]   
  pull_request:
    branches: [develop]
  workflow_dispatch:
    inputs:
      resource_path:
        description: 'Resource path (e.g., cloud-formation/rcc/a-crs-spa)'
        required: true
        type: string
      environment:
        description: 'Specific environment (leave empty for all)'
        required: false
        type: string

jobs:
  detect-changes:
    runs-on: custom
    outputs:
      resource_paths: ${{ steps.detect-changes-action.outputs.paths }}
      specific_environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Applications
        id: detect-changes-action
        uses: ./.github/actions/detect-changes-action
        with:
          github_token: ${{ github.token }}
          event_name: ${{ github.event_name }}
          github_sha: ${{ github.sha }}
          github_ref: ${{ github.ref }}
          event_before: ${{ github.event.before || '' }}
          pull_request_number: ${{ github.event.pull_request.number || '' }}
          resource_path_input: ${{ github.event.inputs.resource_path || '' }}
          repository: ${{ github.repository }}
        
  prepare-matrices:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.resource_paths != '' }}
    runs-on: custom
    outputs:
      dev_matrix: ${{ steps.generate-matrices.outputs.dev_matrix }}
      int_matrix: ${{ steps.generate-matrices.outputs.int_matrix }}
      prod_matrix: ${{ steps.generate-matrices.outputs.prod_matrix }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Generate Combined Deployment Matrices
        id: generate-matrices
        uses: ./.github/actions/combined-matrix-generator
        with:
          resource_paths: ${{ needs.detect-changes.outputs.resource_paths }}
          specific_environment: ${{ needs.detect-changes.outputs.specific_environment }}

  call-deploy-workflows-dev:
    needs: prepare-matrices
    if: ${{ fromJSON(needs.prepare-matrices.outputs.dev_matrix).include[0] != null }}
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJSON(needs.prepare-matrices.outputs.dev_matrix) }}
      fail-fast: false
    name: Trigger DEV deployment for ${{ matrix.application }}-${{ matrix.resource }}
    steps:
      - name: Call Deployment Workflow
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: 'deployment-workflow.yml',
              ref: context.ref,
              inputs: {
                matrix_item: JSON.stringify(${{ toJSON(matrix) }}),
                github_sha: '${{ github.sha }}'
              }
            });