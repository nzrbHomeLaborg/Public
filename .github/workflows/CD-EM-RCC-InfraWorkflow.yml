name: CD-EM-RCC-InfraWorkflow

permissions:
  id-token: write
  contents: write

on:
  push:
    branches: [main]   
  pull_request:
    branches: [develop]
  workflow_dispatch:
    inputs:
      resource_path:
        description: 'Resource path (e.g., cloud-formation/rcc/a-crs-spa)'
        required: true
        type: string
      environment:
        description: 'Specific environment (leave empty for all)'
        required: false
        type: string

jobs:
  detect-changes:
    runs-on: custom
    outputs:
      resource_paths: ${{ steps.detect-changes-action.outputs.paths }}
      specific_environment: ${{ github.event.inputs.environment }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Changed Applications
        id: detect-changes-action
        uses: ./.github/actions/detect-changes-action
        with:
          github_token: ${{ github.token }}
          event_name: ${{ github.event_name }}
          github_sha: ${{ github.sha }}
          github_ref: ${{ github.ref }}
          event_before: ${{ github.event.before || '' }}
          pull_request_number: ${{ github.event.pull_request.number || '' }}
          resource_path_input: ${{ github.event.inputs.resource_path || '' }}
          repository: ${{ github.repository }}
      
      - name: Show detected paths
        shell: bash
        run: |
          echo "Detected paths: ${{ steps.detect-changes-action.outputs.resource_paths }}"
        
  prepare-matrices:
    needs: detect-changes
    if: ${{ needs.detect-changes.outputs.resource_paths != '' }}
    runs-on: custom
    outputs:
      dev_matrix: ${{ steps.generate-matrices.outputs.dev_matrix }}
      int_matrix: ${{ steps.generate-matrices.outputs.int_matrix }}
      prod_matrix: ${{ steps.generate-matrices.outputs.prod_matrix }}
      custom_matrix: ${{ steps.generate-matrices.outputs.custom_matrix }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Generate Combined Deployment Matrices
        id: generate-matrices
        uses: ./.github/actions/combined-matrix-generator
        with:
          resource_paths: ${{ needs.detect-changes.outputs.resource_paths }}
          specific_environment: ${{ needs.detect-changes.outputs.specific_environment }}

  deploy-dev:
    needs: prepare-matrices
    if: ${{ fromJSON(needs.prepare-matrices.outputs.dev_matrix).include[0] != null }}
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix: ${{ fromJSON(needs.prepare-matrices.outputs.dev_matrix) }}
      fail-fast: false
    environment: ${{ matrix.github_environment }}
    
    name: Deploy ${{ matrix.application }}-${{ matrix.resource }} to DEV
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up secrets for parameter processing
        id: setup-secrets
        shell: bash
        run: |
          echo "GITHUB_SECRETS=${{ secrets }}" >> $GITHUB_ENV
          echo "Set up secrets for parameter processing using in-memory method"
        
      - name: Deploy Stack
        uses: ./.github/actions/composite
        with:
          environment: ${{ matrix.environment }}
          stack-name: ${{ matrix.parameters.stack-name }}
          bucket-name: ${{ matrix.parameters.bucket-name }}
          upload-to-s3: ${{ matrix.parameters.bucket-upload }}
          target-folder: ${{ matrix.parameters.target-folder }}
          source-folder: ${{ matrix.parameters.source-folder }}
          template-name: ${{ matrix.parameters.template-name }}
          filename-patterns: ${{ matrix.parameters.filename-patterns }}
          cfnLintEnabled: ${{ matrix.parameters.cfnLintEnabled }}
          extraArgs: ${{ matrix.parameters.extraArgs }}          
          parameter-file: ${{ matrix.parameters.processed-param-file }}
          inline-parameters: ${{ toJSON(matrix.parameters.inline-parameters) }}
          tags: ${{ matrix.parameters.tags }}
          aws-region: ${{ matrix.aws_region }}
          aws-role-to-assume: ${{ secrets[matrix.aws_role_secret] }}
          cfn-role-arn: ${{ secrets[matrix.cfn_role_secret] }}
          iam-execution-role-arn: ${{ secrets[matrix.iam_role_secret] }}
         